<!--

Copyright 2017 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<ProxyEndpoint name='default'>
  <Description>Show how to call into stackdriver</Description>
  <HTTPProxyConnection>
    <BasePath>/stackdriver-2</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>

  <PreFlow name='PreFlow'>
    <Request/>
    <Response>
    </Response>
  </PreFlow>

  <PostFlow name='PostFlow'>
    <Request/>
    <Response>
      <!--
          This sequence is for logging to Stackdriver.  It's all done in the Response
          flow. Ideally it would be PostClientFlow, but that is not possible at
          this time.

          Stackdriver exposes a REST API for writing log messages. Invoking it requires
          a bearer (access) token.

          Acquiring the token for Stackdriver involves an RFC7523 flow, in which
          the client generates a JWT signed with his own private key, sends the JWT to
          the OAuth service, and obtains an opaque access token in response. This access
          token has an expiry of 1 hour. There are some stipulations for this JWT - its
          expiry, its claims (scope, issuer), and the signer and algorithm. The Google
          OAuth service will reject the request for a new token if any of these
          requirements is not met.

          The sequence here does these things:
          - check the cache for a token.
          - If not present, skip logging
          - If present, use the token to invoke Stackdriver to write a log message.

          The token is maintained in cache by the nodejs proxy logic.

      -->
      <Step><Name>Cache-Get-Stackdriver-Token</Name></Step>
      <Step><Name>KVM-Get-Stackdriver-Settings</Name></Step>
      <Step>
        <!-- finally, invoke Stackdriver to emit a log message using a JS Callout for async behavior -->
        <!-- <Name>JS-Log-To-Stackdriver</Name> -->
        <Name>JS-Log-To-Stackdriver-2</Name>
        <Condition>NOT (stackdriver-access-token = null) and (request.header.usesc = null)</Condition>
      </Step>
      <Step>
        <!-- or conditionally, invoke stackdriver with ServiceCallout to wait for a response-->
        <Name>SC-Log-To-Stackdriver</Name>
        <Condition>NOT (stackdriver-access-token = null) and NOT (request.header.usesc = null)</Condition>
      </Step>
      <Step><Name>AM-CleanResponseHeaders</Name></Step>
    </Response>
  </PostFlow>

  <Flows>
    <Flow name='test 1'>
      <!--
        curl -i https://ORGNAME-ENVNAME.apigee.net/stackdriver-2/t1 \
          -H content-type:application/json \
          -d '{ "payload" : "YOUR MESSAGE GOES HERE" }'
      -->
      <Request>
        <Step>
          <Name>RF-InvalidContentType</Name>
          <Condition>NOT (request.header.content-type =| "application/json")</Condition>
        </Step>
        <Step><Name>Extract-LogPayload</Name></Step>
      </Request>
      <Response>
        <Step><Name>AM-Success</Name></Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/t1") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name='unknown request'>
      <Request>
        <Step><Name>RF-UnknownRequest</Name></Step>
      </Request>
      <Response/>
    </Flow>

  </Flows>

  <RouteRule name='NoRouteRule'/>

</ProxyEndpoint>
